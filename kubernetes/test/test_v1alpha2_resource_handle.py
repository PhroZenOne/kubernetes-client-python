# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1alpha2_resource_handle import V1alpha2ResourceHandle

class TestV1alpha2ResourceHandle(unittest.TestCase):
    """V1alpha2ResourceHandle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha2ResourceHandle:
        """Test V1alpha2ResourceHandle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha2ResourceHandle`
        """
        model = V1alpha2ResourceHandle()
        if include_optional:
            return V1alpha2ResourceHandle(
                data = '',
                driver_name = '',
                structured_data = kubernetes.client.models.v1alpha2/structured_resource_handle.v1alpha2.StructuredResourceHandle(
                    node_name = '', 
                    results = [
                        kubernetes.client.models.v1alpha2/driver_allocation_result.v1alpha2.DriverAllocationResult(
                            named_resources = kubernetes.client.models.v1alpha2/named_resources_allocation_result.v1alpha2.NamedResourcesAllocationResult(
                                name = '', ), 
                            vendor_request_parameters = kubernetes.client.models.vendor_request_parameters.vendorRequestParameters(), )
                        ], 
                    vendor_claim_parameters = kubernetes.client.models.vendor_claim_parameters.vendorClaimParameters(), 
                    vendor_class_parameters = kubernetes.client.models.vendor_class_parameters.vendorClassParameters(), )
            )
        else:
            return V1alpha2ResourceHandle(
        )
        """

    def testV1alpha2ResourceHandle(self):
        """Test V1alpha2ResourceHandle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
