# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1alpha2_named_resources_resources import V1alpha2NamedResourcesResources

class TestV1alpha2NamedResourcesResources(unittest.TestCase):
    """V1alpha2NamedResourcesResources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha2NamedResourcesResources:
        """Test V1alpha2NamedResourcesResources
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha2NamedResourcesResources`
        """
        model = V1alpha2NamedResourcesResources()
        if include_optional:
            return V1alpha2NamedResourcesResources(
                instances = [
                    kubernetes.client.models.v1alpha2/named_resources_instance.v1alpha2.NamedResourcesInstance(
                        attributes = [
                            kubernetes.client.models.v1alpha2/named_resources_attribute.v1alpha2.NamedResourcesAttribute(
                                bool = True, 
                                int = 56, 
                                int_slice = kubernetes.client.models.v1alpha2/named_resources_int_slice.v1alpha2.NamedResourcesIntSlice(
                                    ints = [
                                        56
                                        ], ), 
                                name = '', 
                                quantity = '', 
                                string = '', 
                                string_slice = kubernetes.client.models.v1alpha2/named_resources_string_slice.v1alpha2.NamedResourcesStringSlice(
                                    strings = [
                                        ''
                                        ], ), 
                                version = '', )
                            ], 
                        name = '', )
                    ]
            )
        else:
            return V1alpha2NamedResourcesResources(
                instances = [
                    kubernetes.client.models.v1alpha2/named_resources_instance.v1alpha2.NamedResourcesInstance(
                        attributes = [
                            kubernetes.client.models.v1alpha2/named_resources_attribute.v1alpha2.NamedResourcesAttribute(
                                bool = True, 
                                int = 56, 
                                int_slice = kubernetes.client.models.v1alpha2/named_resources_int_slice.v1alpha2.NamedResourcesIntSlice(
                                    ints = [
                                        56
                                        ], ), 
                                name = '', 
                                quantity = '', 
                                string = '', 
                                string_slice = kubernetes.client.models.v1alpha2/named_resources_string_slice.v1alpha2.NamedResourcesStringSlice(
                                    strings = [
                                        ''
                                        ], ), 
                                version = '', )
                            ], 
                        name = '', )
                    ],
        )
        """

    def testV1alpha2NamedResourcesResources(self):
        """Test V1alpha2NamedResourcesResources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
