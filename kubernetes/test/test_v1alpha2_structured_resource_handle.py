# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kubernetes.client.models.v1alpha2_structured_resource_handle import V1alpha2StructuredResourceHandle

class TestV1alpha2StructuredResourceHandle(unittest.TestCase):
    """V1alpha2StructuredResourceHandle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1alpha2StructuredResourceHandle:
        """Test V1alpha2StructuredResourceHandle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1alpha2StructuredResourceHandle`
        """
        model = V1alpha2StructuredResourceHandle()
        if include_optional:
            return V1alpha2StructuredResourceHandle(
                node_name = '',
                results = [
                    kubernetes.client.models.v1alpha2/driver_allocation_result.v1alpha2.DriverAllocationResult(
                        named_resources = kubernetes.client.models.v1alpha2/named_resources_allocation_result.v1alpha2.NamedResourcesAllocationResult(
                            name = '', ), 
                        vendor_request_parameters = kubernetes.client.models.vendor_request_parameters.vendorRequestParameters(), )
                    ],
                vendor_claim_parameters = kubernetes.client.models.vendor_claim_parameters.vendorClaimParameters(),
                vendor_class_parameters = kubernetes.client.models.vendor_class_parameters.vendorClassParameters()
            )
        else:
            return V1alpha2StructuredResourceHandle(
                results = [
                    kubernetes.client.models.v1alpha2/driver_allocation_result.v1alpha2.DriverAllocationResult(
                        named_resources = kubernetes.client.models.v1alpha2/named_resources_allocation_result.v1alpha2.NamedResourcesAllocationResult(
                            name = '', ), 
                        vendor_request_parameters = kubernetes.client.models.vendor_request_parameters.vendorRequestParameters(), )
                    ],
        )
        """

    def testV1alpha2StructuredResourceHandle(self):
        """Test V1alpha2StructuredResourceHandle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
